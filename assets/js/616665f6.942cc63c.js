(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{53:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var i=n(3),o=n(7),a=(n(0),n(68)),s={id:"doc3",title:"Differences from json-logic-js"},r={unversionedId:"doc3",id:"doc3",isDocsHomePage:!1,title:"Differences from json-logic-js",description:"At the time of writing, json-logic-engine is approximately 90% compatible with json-logic-js's test suite, this is unlikely to improve due to differences of opinion between the authors &amp; language origins.",source:"@site/docs/doc3.md",sourceDirName:".",slug:"/doc3",permalink:"/json-logic-engine/docs/doc3",editUrl:"https://github.com/TotalTechGeek/json-logic-engine-documentation/edit/master/website/docs/doc3.md",version:"current",frontMatter:{id:"doc3",title:"Differences from json-logic-js"},sidebar:"someSidebar",previous:{title:"Blazing Fast via Compilation",permalink:"/json-logic-engine/docs/doc2"},next:{title:"Math Operators",permalink:"/json-logic-engine/docs/math"}},l=[{value:"Empty Arrays are Truthy",id:"empty-arrays-are-truthy",children:[]},{value:"No Support for &quot;if&quot; chaining",id:"no-support-for-if-chaining",children:[]},{value:"&quot;all&quot; with zero items evaluates to true",id:"all-with-zero-items-evaluates-to-true",children:[]},{value:"Conclusion",id:"conclusion",children:[]}],c={toc:l};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"At the time of writing, ",Object(a.b)("inlineCode",{parentName:"p"},"json-logic-engine")," is approximately 90% compatible with ",Object(a.b)("inlineCode",{parentName:"p"},"json-logic-js"),"'s test suite, this is unlikely to improve due to differences of opinion between the authors ","&"," language origins."),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"json-logic-js")," was developed to be compatible with PHP, and this has led to some subtle differences."),Object(a.b)("h3",{id:"empty-arrays-are-truthy"},"Empty Arrays are Truthy"),Object(a.b)("p",null,"In JavaScript & most languages, because arrays are objects, they are evaluated as truthy even if they are empty. ",Object(a.b)("inlineCode",{parentName:"p"},"json-logic-engine")," follows this convention."),Object(a.b)("br",null),Object(a.b)("p",null,"Because PHP does not follow this convention, the author of ",Object(a.b)("inlineCode",{parentName:"p"},"json-logic-js")," wrote his interpreter to evaluate ",Object(a.b)("inlineCode",{parentName:"p"},"[]")," as false, as well as a few comparable cases, like ",Object(a.b)("inlineCode",{parentName:"p"},"[0]"),". I do not think I will budge on this stance, but it is possible to override the ",Object(a.b)("inlineCode",{parentName:"p"},"and"),", ",Object(a.b)("inlineCode",{parentName:"p"},"or")," and ",Object(a.b)("inlineCode",{parentName:"p"},"if")," methods to mimic this functionality if necessary."),Object(a.b)("h3",{id:"no-support-for-if-chaining"},'No Support for "if" chaining'),Object(a.b)("p",null,"This may be adjusted at some point in the future, ",Object(a.b)("inlineCode",{parentName:"p"},"json-logic-engine")," supports if statements in the following format:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "if": [\n        conditional,\n        then,\n        else\n    ]\n}\n')),Object(a.b)("p",null,"It does not support the syntax "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "if": [\n        conditional,\n        then,\n        conditional2,\n        then2,\n        ...,\n        else\n    ]\n}\n')),Object(a.b)("p",null,"This may change in the future."),Object(a.b)("h3",{id:"all-with-zero-items-evaluates-to-true"},'"all" with zero items evaluates to true'),Object(a.b)("p",null,"To keep in line with JavaScript's ",Object(a.b)("inlineCode",{parentName:"p"},"every")," method, which checks if each item in an array checked against a conditional is true, if there are zero items in the array the method defaults to true."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "all": [[], { "var": "" }]\n} \n// json-logic-js: false\n// json-logic-engine: true\n')),Object(a.b)("h3",{id:"conclusion"},"Conclusion"),Object(a.b)("p",null,"For most users, it is the author's opinion that most will not be impacted by the differences between the two modules."))}u.isMDXComponent=!0}}]);