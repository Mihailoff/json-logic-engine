(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{54:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return l})),a.d(e,"metadata",(function(){return c})),a.d(e,"toc",(function(){return b})),a.d(e,"default",(function(){return u}));var n=a(3),i=a(7),r=(a(0),a(68)),o=a(73),l={id:"math",title:"Math Operators"},c={unversionedId:"math",id:"math",isDocsHomePage:!1,title:"Math Operators",description:"Math Operators",source:"@site/docs/math.mdx",sourceDirName:".",slug:"/math",permalink:"/json-logic-engine/docs/math",editUrl:"https://github.com/TotalTechGeek/json-logic-engine-documentation/edit/master/website/docs/math.mdx",version:"current",frontMatter:{id:"math",title:"Math Operators"},sidebar:"someSidebar",previous:{title:"Differences from json-logic-js",permalink:"/json-logic-engine/docs/doc3"},next:{title:"Logic Operators",permalink:"/json-logic-engine/docs/logic"}},b=[{value:"Addition",id:"addition",children:[]},{value:"Subtraction",id:"subtraction",children:[]},{value:"Multiplication",id:"multiplication",children:[]},{value:"Division",id:"division",children:[]},{value:"Modulo",id:"modulo",children:[]},{value:"Maximum",id:"maximum",children:[]},{value:"Minimum",id:"minimum",children:[]}],d={toc:b};function u(t){var e=t.components,a=Object(i.a)(t,["components"]);return Object(r.b)("wrapper",Object(n.a)({},d,a,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"Math Operators"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Operators"),Object(r.b)("th",{parentName:"tr",align:null},"Instruction"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Addition"),Object(r.b)("td",{parentName:"tr",align:null},"+")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Subtraction"),Object(r.b)("td",{parentName:"tr",align:null},"-")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Multiplication"),Object(r.b)("td",{parentName:"tr",align:null},"*")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Division"),Object(r.b)("td",{parentName:"tr",align:null},"/")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Modulo"),Object(r.b)("td",{parentName:"tr",align:null},"%")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Maximum"),Object(r.b)("td",{parentName:"tr",align:null},"min")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Minimum"),Object(r.b)("td",{parentName:"tr",align:null},"max")))),Object(r.b)("h2",{id:"addition"},"Addition"),Object(r.b)(o.a,{defaultLogic:{"+":[1,{var:""}]},defaultData:2,mdxType:"LogicRunner"}),Object(r.b)("p",null,"This method can also be used to cast strings to numbers, and sum up the output returned by other function calls."),Object(r.b)("h2",{id:"subtraction"},"Subtraction"),Object(r.b)(o.a,{defaultLogic:{"-":[10,{var:""}]},defaultData:2,mdxType:"LogicRunner"}),Object(r.b)("h2",{id:"multiplication"},"Multiplication"),Object(r.b)(o.a,{defaultLogic:{"*":[5,{var:""}]},defaultData:3,mdxType:"LogicRunner"}),Object(r.b)("h2",{id:"division"},"Division"),Object(r.b)(o.a,{defaultLogic:{"/":[1,{var:""}]},defaultData:2,mdxType:"LogicRunner"}),Object(r.b)("h2",{id:"modulo"},"Modulo"),Object(r.b)(o.a,{defaultLogic:{"%":[5,{var:""}]},defaultData:3,mdxType:"LogicRunner"}),Object(r.b)("h2",{id:"maximum"},"Maximum"),Object(r.b)(o.a,{defaultLogic:{max:[1,8,{var:""}]},defaultData:13,mdxType:"LogicRunner"}),Object(r.b)("h2",{id:"minimum"},"Minimum"),Object(r.b)(o.a,{defaultLogic:{min:[1,8,{var:""}]},defaultData:5,mdxType:"LogicRunner"}))}u.isMDXComponent=!0}}]);