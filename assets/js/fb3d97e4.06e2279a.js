(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{65:function(n,e,o){"use strict";o.r(e),o.d(e,"frontMatter",(function(){return i})),o.d(e,"metadata",(function(){return r})),o.d(e,"toc",(function(){return c})),o.d(e,"default",(function(){return u}));var t=o(3),s=(o(0),o(68));const i={id:"async",title:"Asynchronous Engine"},r={unversionedId:"async",id:"async",isDocsHomePage:!1,title:"Asynchronous Engine",description:"Asynchronous Engine",source:"@site/docs/async.md",sourceDirName:".",slug:"/async",permalink:"/json-logic-engine/docs/async",editUrl:"https://github.com/TotalTechGeek/json-logic-engine-documentation/edit/master/website/docs/async.md",version:"current",frontMatter:{id:"async",title:"Asynchronous Engine"},sidebar:"someSidebar",previous:{title:"Adding Methods",permalink:"/json-logic-engine/docs/methods"},next:{title:"Blazing Fast via Compilation",permalink:"/json-logic-engine/docs/doc2"}},c=[{value:"Asynchronous Engine",id:"asynchronous-engine",children:[]}],a={toc:c};function u({components:n,...e}){return Object(s.b)("wrapper",Object(t.a)({},a,e,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"asynchronous-engine"},"Asynchronous Engine"),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"json-logic-engine")," comes with built-in support for asynchronous operations, so that you may integrate with external data sources our modules that may only resolve via Promises."),Object(s.b)("br",null),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-js"},"import { AsyncLogicEngine } from 'json-logic-engine'\n\nconst engine = new AsyncLogicEngine()\n\nengine.addMethod('after250ms', async (n) => {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve(n)\n        }, 250)\n    })\n})\n\nasync function main () {\n    const f = await engine.build({ '+': [{ after250ms: 1 }, 1] })\n    console.log(await f()) // prints 2\n}\n")),Object(s.b)("p",null,"At the time of writing, there are no built-in asynchronous operations, although each of the higher order operators are built-with support for asynchronous operations. (so you can map/filter/reduce/etc using async methods.)"))}u.isMDXComponent=!0}}]);