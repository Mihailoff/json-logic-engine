(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{57:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return r})),t.d(n,"default",(function(){return d}));var o=t(3),a=t(7),i=(t(0),t(68)),l={id:"doc1",title:"Installation and Setup",sidebar_label:"Installation and Setup",slug:"/"},s={unversionedId:"doc1",id:"doc1",isDocsHomePage:!1,title:"Installation and Setup",description:"Installation & Setup",source:"@site/docs/doc1.md",sourceDirName:".",slug:"/",permalink:"/json-logic-engine/docs/",editUrl:"https://github.com/TotalTechGeek/json-logic-engine-documentation/edit/master/website/docs/doc1.md",version:"current",sidebar_label:"Installation and Setup",frontMatter:{id:"doc1",title:"Installation and Setup",sidebar_label:"Installation and Setup",slug:"/"},sidebar:"someSidebar",next:{title:"Adding Methods",permalink:"/json-logic-engine/docs/methods"}},r=[{value:"Installation &amp; Setup",id:"installation--setup",children:[]}],c={toc:r};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"installation--setup"},"Installation & Setup"),Object(i.b)("p",null,"First, add the module to your application through your preferred package manager, "),Object(i.b)("br",null),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"npm install json-logic-engine\n-- or -- \nyarn add json-logic-engine\n")),Object(i.b)("p",null,'Then import the module, and try to set up a "Hello, World!"'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'import { LogicEngine } from \'json-logic-engine\'\n\nconst engine = new LogicEngine()\n\n// we can make use of the modules function compilation\nconst f = engine.build({\n  \'cat\': ["Hello, ", { var: \'\' }, "!"]\n})\n\nconsole.log(f("World")) // prints "Hello, World!"\n')),Object(i.b)("p",null,"Or alternatively, make use of the interpreter using: "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { LogicEngine } from 'json-logic-engine'\n\nconst engine = new LogicEngine()\n\n// we can make use of the modules function compilation\nconsole.log(engine.run({ 'cat': [\"Hello, \", { var: '' }, \"!\"] }, \"World\"))\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Please note that at the time of writing that while the interpreter is still available in this module, the compilation mechanism yields far better performance in all use-cases ","&"," supports all of the same features. The only time you may wish to use ",Object(i.b)("inlineCode",{parentName:"p"},".run")," is when you are switching over from ",Object(i.b)("inlineCode",{parentName:"p"},"json-logic-js")," and migrating from it's ",Object(i.b)("inlineCode",{parentName:"p"},".apply")," method.")))}d.isMDXComponent=!0}}]);